table(agricultureLogical)
which(agricultureLogical)
install.packages("jpeg")
source('~/R/cleaning-data-week3/quiz-2.R')
img <- readJPEG(system.file("./data/", "pic.jpg", package="jpeg"), TRUE)
source('~/R/cleaning-data-week3/quiz-2.R')
install.packages("jpeg")
img <- readJPEG(system.file("./data/", "pic.jpg", package="jpeg"), TRUE)
library(jpeg)
img <- readJPEG(system.file("./data/", "pic.jpg", package="jpeg"), TRUE)
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
list.files('./data')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
file.info("./data/pic.jpg")
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
img
quantile(img)
quantile(img, probs = seq(0,1,0.25))
quantile(img, probs = seq(0,1,2,0.25))
quantile(img, probs = seq(0,1,0.30))
quantile(img, probs = seq(0,1,0.15))
quantile(img, probs = seq(0,1,0.5))
quantile(img, probs = seq(0,1,0.05))
quantile(img, probs = seq(0,1,0.10))
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-2.R')
source('~/R/cleaning-data-week3/quiz-3.R')
summary(dproduct)
summary*edata
summary(edata)
names(dproduct)
names(edata)
str(dproduct)
head(dproduct)
dproduct
dproduct <- fread('./data/domesticproduct.csv')
data <- read.csv('./data/domesticproduct.csv')
data
dproduct <- fread('./data/domesticproduct.csv', skip = 4)
dproduct <- fread('./data/domesticproduct.csv', skip = 5)
dproduct <- fread('./data/domesticproduct.csv', skip = 6)
head(dproduct)
dproduct <- fread('./data/domesticproduct.csv', skip = 3)
head(dproduct)
dproduct <- fread('./data/domesticproduct.csv', skip = 4)
head(dproduct)
str(dproduct)
dproduct
na.exclude(dproduct)
na.exclude(dproduct$V1)
dproduct
dproduct(na.rm = TRUE)
dproduct[,V1 != na]
dproduct[complete.cases(dproduct[,1])]
dproduct[complete.cases(dproduct[,2])]
dproduct[complete.cases(dproduct[3,])]
dproduct[complete.cases(dproduct[1,])]
dproduct[complete.cases(dproduct[,4])]
dproduct[complete.cases(dproduct[,V1])]
dproduct[complete.cases(dproduct[,V1]),]
dproduct[complete.cases(dproduct[,1]),]
dproduct[complete.cases(dproduct[,1:2]),]
edata
names(edata)
names(dproduct)
merged <- merge(edata, dproduct, by.x = "CountryCode", by.y = "V1", all=TRUE)
head(merged)
str(merged)
merged
is.na(merged$V1)
head(merged)
head(dproduct)
is.na(merged$V5)
table(is.na(merged$V5))
dproduct
dproduct
dproduct <- fread('./data/domesticproduct.csv',skip = 4,nrows = 190)
dproduct
colnames(dproduct) <- c("CountryCode", "Ranking", "V3", "COuntryName", "Amount", "V6", "V7", "V8", "V9", "V10")
HEAD(DPRODUCT)
head(dproduct)
merged <- merge(edata, dproduct, by.x = "CountryCode", by.y = "CountryCode", all=TRUE)
merged
is.na(merged$Ranking)
table(is.na(merged$Ranking))
names(edata)
head(dproduct)
sort(merged$Raking)
sort(merged$Ranking)
merged[order(merged$Ranking),]
install.packages('plyr')
library(pylr)
library(plyr)
arrange(merged,Raking)
arrange(merged,Ranking)
arrange(merged,desc(Ranking))
arrange(with(merged, is.numeric(Ranking),desc(Ranking))
;
arrange(with(merged, is.numeric(Ranking)),desc(Ranking))
arrange(merged, desc(Ranking))
head(arrange(merged, desc(Ranking)), 14)
names(edata)
head(edata)
highincome = subset(merged, IncomeGroup = "High income: OECD")
head(highincome)
mean(highincome$Ranking)
mean(highincome$Ranking, na.rm = TRUE)
tables(highincome$`Income Group`)
highincome$`Income Group`
highIncome
highincome
merged
highincome <- subset(merged, IncomeGroup = "High income: OECD")
highincome
highincome <- subset(merged, IncomeGroup == "High income: OECD")
highincome <- merged[with(merged, which(merged$`Income Group` == "High income: OECD"))
;
highincome <- with(merged, which(merged$`Income Group` == "High income: OECD"))
highincome
highincome <- merged[which(merged$`Income Group` == "High income: OECD"),]
highincome
mean(highincome$Ranking)
highincome <- merged[which(merged$`Income Group` == "High income: nonOECD"),]
mean(highincome$Ranking)
mean(highincome$Ranking, na.rm = TRUE)
quantile(merged)
quantile(merged$Ranking)
quantile(merged$Ranking, na.rm = FALSE)
quantile(merged$Ranking, na.rm = TRUE)
quantile(merged$Ranking, na.rm = TRUE, probs = (0,1,0.20))
quantile(merged$Ranking, na.rm = TRUE, probs = (0,1))
quantile(merged$Ranking, na.rm = TRUE, probs = (0.1))
quantile(merged$Ranking, na.rm = TRUE, probs = (0.1,0.20))
quantile(merged$Ranking, na.rm = TRUE, probs = (0.10.2))
quantile(merged$Ranking, na.rm = TRUE)
head(merged)
head(dproduct, n = 38)
highestGDP <- head(dproduct, n = 38)
names(merged)
head(merged)
head(merged$`Income Group`)
lowermiddleincome <- with(merged, which(merged$`Income Group` == "Lower middle income" & merged$Ranking <= 38))
lowermiddleincome
head(lowermiddleincome)
lowermiddleincome
lowermiddleincome <- with(merged, which(merged$`Income Group` == "Low income" & merged$Ranking <= 38))
lowermiddleincome
packageVersion("swirl")
library(swirl)
ls()
rm(list=ls())
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -(X:size))
select(cran, -(5:20))
select(cran, -5:20)
select(cran, (-5:20))
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = (2^20) / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package = group_by(cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, avg_size = mean(size))
summarize(by_package, mean(size))
source('/tmp/RtmpBtBjLq/summarize1.R')
source('/tmp/RtmpBtBjLq/summarize1.R')
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(count))
top_unique_sorted <- arrange(top_unique, desc(unique()))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('/tmp/RtmpBtBjLq/chain1.R')
submit()
source('/tmp/RtmpBtBjLq/chain2.R')
submit()
source('/tmp/RtmpBtBjLq/chain3.R')
submit()
source('/tmp/RtmpBtBjLq/chain4.R')
submit()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package = group_by(cran, package)
by_package <- group_by (cran, package)
by_package
summarize(by_package, mean(size))
source('/tmp/RtmpBtBjLq/summarize1.R')
source('/tmp/RtmpBtBjLq/summarize1.R')
submit()
pack_sum
quantile(pack_sum$coumt, probs = 0.99)
quantile(pack_sum$count, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique_sorted <- arrange(top_unique, desc(unique))
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
source('/tmp/RtmpBtBjLq/chain1.R')
submit()
source('/tmp/RtmpBtBjLq/chain1.R')
source('/tmp/RtmpBtBjLq/chain1.R')
submit()
submit()
source('/tmp/RtmpBtBjLq/chain2.R')
submit()
source('/tmp/RtmpBtBjLq/chain3.R')
submit()
submit()
source('/tmp/RtmpBtBjLq/chain4.R')
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(students, sex_class, count, -grade)
gather(students2, sex_class, count, -grade)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, sep="_")
separate(res, sex_class, into = c("sex,class"))
separate(res, sexc_class, c("sex", "class"))
separate(res, sex_class, c("sex", "class"))
source('/tmp/RtmpBtBjLq/script1.R')
submit()
students3
source('/tmp/RtmpBtBjLq/script2.R')
submit()
?spread
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
submit()
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
source('/tmp/RtmpBtBjLq/script3.R')
submit()
extract_numeric("class5")
submit*()
submit()
submit()
source('/tmp/RtmpBtBjLq/script4.R')
submit()
?mutate
source('/tmp/RtmpBtBjLq/script4.R')
source('/tmp/RtmpBtBjLq/script4.R')
submit()
source('/tmp/RtmpBtBjLq/script4.R')
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
estatisticas_contribuintes
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
tb
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
tb
source('~/development/br-data/script.R')
tb
source('~/development/br-data/script.R')
head(tb)
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
HEAD(TB_)
head(tb)
source('~/development/br-data/script.R')
head(tb)
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
head(tb)
source('~/development/br-data/script.R')
head(tb)
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
head(tb)
source('~/development/br-data/script.R')
head(data)
summary(dataa)
summary(data)
colnames(data) <- c("ano","contribuintes","numero_medio_mensal","valor","idade", "estatistica", "sexo")
head(data)
data % % group_by(ano)
data %.% group_by(ano)
datag <- data %>% group_by(ano)
datag
datag <- data %>% group_by(ano) %>% summarise(sumvalor = sum(valor))
data$valor <- factor(data$valor)
datag <- data %>% group_by(ano) %>% summarise(sumvalor = sum(valor))
head(data)
data <- read.csv(estatisticas_contribuintes, encoding = "UTF-8")
data
head(data)
colnames(data) <- c("ano","contribuintes","numero_medio_mensal","valor","idade", "estatistica", "sexo")
data
head(data)
data[,list(valor = sum(valor), by=ano)]
data[,list(data$valor = sum(data$valor), by=data$ano)]
library(data.table)
data <- data.table(data)
ls
head(data)
data[, sum(valor)]
data$valor = factor(data$valor)
data[, sum(valor)]
source('~/development/br-data/script.R')
head(data)
data$valor <- as.numeric(data$valor)
head(data)
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
data
datag <- data %>% group_by(ano) %>% summarise(sumvalor = sum(valor))
datag
datag <- data %>% group_by(ano)
datag
data
data <- tbl_df(read.csv(estatisticas_contribuintes, encoding = "UTF-8"))
data$valor <- as.numeric(data$valor)
data$numero_medio_mensal <- as.numeric(data$numero_medio_mensal)
data$contribuintes <- as.numeric(data$contribuintes)
data
source('~/development/br-data/script.R')
data <- tbl_df(read.csv(estatisticas_contribuintes, encoding = "UTF-8", stringsAsFactors = FALSE))
colnames(data) <- c("ano","contribuintes","numero_medio_mensal","valor","idade", "estatistica", "sexo")
data$valor <- as.numeric(data$valor)
data$numero_medio_mensal <- as.numeric(data$numero_medio_mensal)
data$contribuintes <- as.numeric(data$contribuintes)
head(data)
datag <- data %>% group_by(ano)
datag <- data %>% group_by(ano) %>% summarise(sumvalor = sum(valor))
datag
datag <- data %>% group_by(ano) %>% summarise(sumvalor = sum(valor, na.rm = TRUE))
datag
source('~/development/br-data/script.R')
as.numeric("123,43")
options(OutDec=",")
as.numeric("123,43")
as.numeric(sub(",",".","123,43")
;
as.numeric(sub(",",".","123,43"))
source('~/development/br-data/script.R')
data
datag
source('~/development/br-data/script.R')
datag
source('~/development/br-data/script.R')
source('~/development/br-data/script.R')
datag
source('~/development/br-data/script.R')
data_por_ano
source('~/development/br-data/script.R')
data_por_ano_sexo
source('~/development/br-data/script.R')
data_por_sexo
data_por_ano_sexo
plot(data_por_ano_sexo)
plot(data_por_ano_sexo$ano)
plot(data_por_ano_sexo$ano)
plot(data_por_ano_sexo$sexo)
barplot(data_por_ano_sexo)
data_por_ano_sexo
barplot(data_por_ano_sexo, main = "ano", ylab="valor")
barplot(as.matrix(data_por_ano_sexo), main = "ano", ylab="valor")
barplot(as.matrix(data_por_ano_sexo), main = "ano")
barplot(as.matrix(data_por_ano_sexo), main = "ano", beside=TRUE)
barplot(as.matrix(data_por_ano_sexo), main = "ano", beside=TRUE, col=rainbow(3))
barplot(as.matrix(data_por_ano_sexo), main = "ano", col=rainbow(3))
plot(data_por_ano_sexo)
source('~/development/br-data/script.R')
install.package("reshape")
install.packages("reshape")
df <- melt(datag, id=c("ano", "sexo"))
require(reshape)
df <- melt(datag, id=c("ano", "sexo"))
df <- melt(datag, id=c("ano", "sexo"))
datag
df <- melt(data_por_ano_sexo, id=c("ano", "sexo"))
df
df <- melt(data_por_ano_sexo, id=c("ano", "sexo"), variable.name = 'valor')
df
df <- melt(data_por_ano_sexo, id=c("ano", "sexo"))
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ggplot(df)
source('~/development/br-data/script.R')
